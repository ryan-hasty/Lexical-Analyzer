<tokens>
<keyword> class </keyword>
<identifier> Main </identifier>
<symbols> { </symbols>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> main </identifier>
<symbols> ( </symbols>
<symbols> ) </symbols>
<symbols> { </symbols>
<keyword> var </keyword>
<identifier> Array </identifier>
<identifier> a </identifier>
<symbols> ; </symbols>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> length </identifier>
<symbols> ; </symbols>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> i </identifier>
<symbols> , </symbols>
<identifier> sum </identifier>
<symbols> ; </symbols>
<keyword> let </keyword>
<identifier> length </identifier>
<symbols> = </symbols>
<identifier> Keyboard </identifier>
<symbols> . </symbols>
<identifier> readInt </identifier>
<symbols> ( </symbols>
<stringConstant> HOW MANY NUMBERS?  </stringConstant>
<symbols> ) </symbols>
<symbols> ; </symbols>
<keyword> let </keyword>
<identifier> a </identifier>
<symbols> = </symbols>
<identifier> Array </identifier>
<symbols> . </symbols>
<identifier> new </identifier>
<symbols> ( </symbols>
<identifier> length </identifier>
<symbols> ) </symbols>
<symbols> ; </symbols>
<keyword> let </keyword>
<identifier> i </identifier>
<symbols> = </symbols>
<integerConstant> 0 </integerConstant>
<symbols> ; </symbols>
<keyword> while </keyword>
<symbols> ( </symbols>
<identifier> i </identifier>
<symbols> < </symbols>
<identifier> length </identifier>
<symbols> ) </symbols>
<symbols> { </symbols>
<keyword> let </keyword>
<identifier> a </identifier>
<symbols> [ </symbols>
<identifier> i </identifier>
<symbols> ] </symbols>
<symbols> = </symbols>
<identifier> Keyboard </identifier>
<symbols> . </symbols>
<identifier> readInt </identifier>
<symbols> ( </symbols>
<stringConstant> ENTER THE NEXT NUMBER:  </stringConstant>
<symbols> ) </symbols>
<symbols> ; </symbols>
<keyword> let </keyword>
<identifier> i </identifier>
<symbols> = </symbols>
<identifier> i </identifier>
<symbols> + </symbols>
<integerConstant> 1 </integerConstant>
<symbols> ; </symbols>
<symbols> } </symbols>
<keyword> let </keyword>
<identifier> i </identifier>
<symbols> = </symbols>
<integerConstant> 0 </integerConstant>
<symbols> ; </symbols>
<keyword> let </keyword>
<identifier> sum </identifier>
<symbols> = </symbols>
<integerConstant> 0 </integerConstant>
<symbols> ; </symbols>
<keyword> while </keyword>
<symbols> ( </symbols>
<identifier> i </identifier>
<symbols> < </symbols>
<identifier> length </identifier>
<symbols> ) </symbols>
<symbols> { </symbols>
<keyword> let </keyword>
<identifier> sum </identifier>
<symbols> = </symbols>
<identifier> sum </identifier>
<symbols> + </symbols>
<identifier> a </identifier>
<symbols> [ </symbols>
<identifier> i </identifier>
<symbols> ] </symbols>
<symbols> ; </symbols>
<keyword> let </keyword>
<identifier> i </identifier>
<symbols> = </symbols>
<identifier> i </identifier>
<symbols> + </symbols>
<integerConstant> 1 </integerConstant>
<symbols> ; </symbols>
<symbols> } </symbols>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbols> . </symbols>
<identifier> printString </identifier>
<symbols> ( </symbols>
<stringConstant> THE AVERAGE IS:  </stringConstant>
<symbols> ) </symbols>
<symbols> ; </symbols>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbols> . </symbols>
<identifier> printInt </identifier>
<symbols> ( </symbols>
<identifier> sum </identifier>
<identifier> / </identifier>
<identifier> length </identifier>
<symbols> ) </symbols>
<symbols> ; </symbols>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbols> . </symbols>
<identifier> println </identifier>
<symbols> ( </symbols>
<symbols> ) </symbols>
<symbols> ; </symbols>
<keyword> return </keyword>
<symbols> ; </symbols>
<symbols> } </symbols>
<symbols> } </symbols>
</tokens>